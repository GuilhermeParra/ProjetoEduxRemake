// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoEduxRemake.Context;

namespace ProjetoEduxRemake.Migrations
{
    [DbContext(typeof(EduxContext))]
    [Migration("20201001201931_AlterTables")]
    partial class AlterTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoEduxRemake.Domains.AlunoTurma", b =>
                {
                    b.Property<Guid>("IdAlunoTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAlunoTurma");

                    b.HasIndex("IdTurma");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AlunosTurmas");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Categoria", b =>
                {
                    b.Property<Guid>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Curso", b =>
                {
                    b.Property<Guid>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdInstituicao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCurso");

                    b.HasIndex("IdInstituicao");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Curtida", b =>
                {
                    b.Property<Guid>("IdCurtida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDica")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCurtida");

                    b.HasIndex("IdDica");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Dica", b =>
                {
                    b.Property<Guid>("IdDica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDica");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Dicas");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Instituicao", b =>
                {
                    b.Property<Guid>("IdInstituicao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInstituicao");

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Objetivo", b =>
                {
                    b.Property<Guid>("IdObjetivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdObjetivo");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Objetivos");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.ObjetivoAluno", b =>
                {
                    b.Property<Guid>("IdObjetivoAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlcancado")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAlunoTurma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdObjetivo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdObjetivoAluno");

                    b.HasIndex("IdAlunoTurma");

                    b.HasIndex("IdObjetivo");

                    b.ToTable("ObjetivosAlunos");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Perfil", b =>
                {
                    b.Property<Guid>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Permissao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.ProfessorTurma", b =>
                {
                    b.Property<Guid>("IdProfessorTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdProfessorTurma");

                    b.HasIndex("IdTurma");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ProfessoresTurmas");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Turma", b =>
                {
                    b.Property<Guid>("IdTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCurso")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdTurma");

                    b.HasIndex("IdCurso");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUltimoAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdPerfil")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.AlunoTurma", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Turma", "Turma")
                        .WithMany("AlunosTurmas")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoEduxRemake.Domains.Usuario", "Usuario")
                        .WithMany("AlunosTurmas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Curso", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Instituicao", "Instituicao")
                        .WithMany("Cursos")
                        .HasForeignKey("IdInstituicao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Curtida", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Dica", "Dica")
                        .WithMany("Curtidas")
                        .HasForeignKey("IdDica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoEduxRemake.Domains.Usuario", "Usuario")
                        .WithMany("Curtidas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Dica", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Usuario", "Usuario")
                        .WithMany("Dicas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Objetivo", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Categoria", "Categoria")
                        .WithMany("Objetivos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.ObjetivoAluno", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.AlunoTurma", "AlunoTurma")
                        .WithMany("ObjetivoAlunos")
                        .HasForeignKey("IdAlunoTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoEduxRemake.Domains.Objetivo", "Objetivo")
                        .WithMany("ObjetivosAlunos")
                        .HasForeignKey("IdObjetivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.ProfessorTurma", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Turma", "Turma")
                        .WithMany("ProfessoresTurmas")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoEduxRemake.Domains.Usuario", "Usuario")
                        .WithMany("ProfessoresTurma")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Turma", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoEduxRemake.Domains.Usuario", b =>
                {
                    b.HasOne("ProjetoEduxRemake.Domains.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
